pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    // Updated to AGP 8.6.0 to support targeting API 35 and modern Gradle 8.9
    id "com.android.application" version "8.6.0" apply false
    // Kotlin 2.0.x aligns with Flutter 3.35 embedded Kotlin stdlib
    id "org.jetbrains.kotlin.android" version "2.1.0" apply false
    // Latest Google Services & Crashlytics Gradle plugins (as of Aug 2025)
    id "com.google.gms.google-services" version "4.4.2" apply false
    id "com.google.firebase.crashlytics" version "3.0.2" apply false
}

dependencyResolutionManagement {
    // Using PREFER_SETTINGS allows plugins (flutter) to add required repos without failure.
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        // Flutter local engine or artifacts (added defensively)
        maven { url = uri("https://storage.googleapis.com/download.flutter.io") }
    }
}

rootProject.name = "mobichan"
include ':app'