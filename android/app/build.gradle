plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dev.flutter.flutter-gradle-plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '4'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.lucasgoudin.mobichan"
    compileSdk 35

    splits {
        abi {
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk false
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.lucasgoudin.mobichan"
        minSdkVersion flutter.minSdkVersion // verify Flutter min (likely 21) still OK with dependencies
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            // R8 enabled by default; shrink & minify resources/code
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Explicit debuggable flags not needed; keep minimal config
        }
        debug {
            // Make sure Crashlytics disabled for debug
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }

    packagingOptions {
        resources {
            excludes += [
                    'META-INF/{AL2.0,LGPL2.1}',
                    'META-INF/LICENSE*'
            ]
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation platform('com.google.firebase:firebase-bom:33.5.1') // Aug 2025 approximate recent BOM
    implementation 'com.google.firebase:firebase-analytics'
}